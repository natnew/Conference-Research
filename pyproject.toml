[build-system]
requires = ["setuptools>=45", "wheel", "setuptools-scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "conference-research"
version = "1.0.0"
description = "Automated conference and campus research workflows"
readme = "README.md"
requires-python = ">=3.9"
license = {file = "LICENSE"}
authors = [
    {name = "Conference Research Team", email = "team@conference-research.com"},
]
keywords = ["conference", "research", "automation", "academic", "streamlit"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Education",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering",
    "Topic :: Education",
]

dependencies = [
    "streamlit==1.34.0",
    "openai>=1.43.0",
    "selenium>=4.15.0",
    "pandas==2.2.2",
    "requests==2.32.3",
    "beautifulsoup4==4.12.3",
    "webdriver-manager==4.0.2",
    "openpyxl==3.1.5",
    "tiktoken==0.5.2",
    "duckduckgo_search==6.1.9",
    "xlsxwriter==3.2.5",
    "pdfminer.six==20231228",
    "PyPDF2==3.0.1",
    "pymupdf4llm==0.0.8",
    "langchain==0.2.14",
    "langchain-core==0.2.38",
    "langchain-openai==0.1.6",
    "streamlit-authenticator==0.2.3",
    "pydantic>=2.6,<2.12",
    "pyyaml==6.0.2",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.10.0",
    "pytest-asyncio>=0.21.0",
    "black>=23.0.0",
    "ruff>=0.1.0",
    "mypy>=1.5.0",
    "pre-commit>=3.0.0",
]
test = [
    "pytest-mock>=3.10.0",
    "responses>=0.23.0",
    "factory-boy>=3.3.0",
    "freezegun>=1.2.0",
    "hypothesis>=6.82.0",
]
docs = [
    "mkdocs>=1.5.0",
    "mkdocs-material>=9.0.0",
    "mkdocs-mermaid2-plugin>=1.1.0",
]
security = [
    "safety>=2.3.0",
    "bandit>=1.7.0",
    "semgrep>=1.45.0",
]

[project.urls]
Homepage = "https://github.com/natnew/Conference-Research"
Documentation = "https://github.com/natnew/Conference-Research/blob/main/README.md"
Repository = "https://github.com/natnew/Conference-Research.git"
"Bug Tracker" = "https://github.com/natnew/Conference-Research/issues"

[tool.setuptools.packages.find]
where = [""]
include = ["con_research*", "pages*"]
exclude = ["tests*"]

[tool.pytest.ini_options]
minversion = "7.0"
addopts = [
    "-ra",
    "--strict-markers",
    "--strict-config",
    "--cov=con_research",
    "--cov=pages",
    "--cov-branch",
    "--cov-report=term-missing",
    "--cov-report=html:htmlcov",
    "--cov-report=xml",
    "--cov-fail-under=70"
]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "unit: marks tests as unit tests (deselect with '-m \"not unit\"')",
    "integration: marks tests as integration tests (deselect with '-m \"not integration\"')",
    "e2e: marks tests as end-to-end tests (deselect with '-m \"not e2e\"')",
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "api: marks tests that require API access",
    "webdriver: marks tests that require WebDriver",
]

[tool.coverage.run]
source = ["con_research", "pages"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/migrations/*",
    "*/venv/*",
    "*/virtualenv/*",
    ".tox/*",
    ".pytest_cache/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.black]
line-length = 88
target-version = ['py39']
include = '\\.[pyi]?$'
extend-exclude = '''
/(
  \\..*
  | build
  | dist
)/
'''

[tool.ruff]
target-version = "py39"
line-length = 88
select = ["E","W","F","I","B","C4","UP"]
ignore = ["E501","B008","C901"]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]
"tests/**/*" = ["S101", "S311"]

[tool.mypy]
python_version = "3.9"
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = true
strict_optional = true

[[tool.mypy.overrides]]
module = [
    "streamlit.*",
    "selenium.*",
    "webdriver_manager.*",
    "duckduckgo_search.*",
    "tiktoken.*",
    "serpapi.*",
]
ignore_missing_imports = true
